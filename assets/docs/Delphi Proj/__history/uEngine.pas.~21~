Unit uEngine;

Interface

Uses
    Windows;

Type
    { Engine }
    TEngine = Class
    Private
        Port: String;
        HPort: THandle;
        DCB: TDCB;
    Public
        Property COMPortName: String Read Port Write Port;
        Property HandlePort: THandle Read HPort Write HPort;
        Property DeviceControlBlock: TDCB Read DCB Write DCB;
        Function TryToOpenComPort(): Boolean;
        Procedure SetConfigs(Const BRate: Cardinal; Const Par, BSize, Sbits: Byte);
        Function GetInfoFromProt: String;
        Procedure SendInfoToPort(Const SendingMsg: String);
        Constructor Create();
    End;

Implementation

{ Public Methods }

Constructor TEngine.Create();
Begin
    COMPortName := 'Неизвестно';
    SetConfigs(CBR_9600, NOPARITY, 8, ONESTOPBIT);
End;

Function TEngine.TryToOpenComPort(): Boolean;
Begin
    HandlePort := CreateFile(PChar('\\.\' + ComPortName), GENERIC_READ Or GENERIC_WRITE, 0, Nil, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0);
    TryToOpenComPort := HPort <> INVALID_HANDLE_VALUE;
End;

Procedure TEngine.SetConfigs(Const BRate: Cardinal; Const Par, BSize, Sbits: Byte);
Var
    DevCtrlBlock: TDCB;
Begin
    //т.к. property является const obj, то напрямую передать нельзя. Для этого используется переменная DevCtrlBlock
    DevCtrlBlock := DeviceControlBlock;
    GetCommState(HPort, DevCtrlBlock);

    DevCtrlBlock.BaudRate := BRate; //скорость передачи данных = 9600
    DevCtrlBlock.Parity := Par; //No parity bit
    DevCtrlBlock.ByteSize := BSize; //8 data bits
    DevCtrlBlock.StopBits := Sbits; //1 stop bit

    DeviceControlBlock := DevCtrlBlock;

    //Т.к. здесь мы уже применяем новые настройки К порту, то можем использовать и const obj
    SetCommState(HPort, DeviceControlBlock);
End;

Function TEngine.GetInfoFromProt: String;
Var
    BytesRead, BytesWritten: DWORD;
    Buffer: Array[0 .. 255] Of Byte;
Begin
    ReadFile(HPort, Buffer, SizeOf(Buffer), BytesRead, Nil);

    If BytesRead > 0 Then
    Begin
        //Данные успешно получены
        //работа с данными
    End
    Else
       GetInfoFromProt := 'Сообщений нет.' + #13#10; 
End;

Procedure TEngine.SendInfoToPort(Const SendingMsg: String);
Var
    BytesRead, BytesWritten: DWORD;
    Buffer: Array[0 .. 255] Of Byte;
Begin
    //Buffer[0] := $41; //Example: Writing 'A' to the port

    WriteFile(HPort, Buffer, 1, BytesWritten, Nil);

    If BytesWritten = 1 Then
    Begin
        //Данные успешно записаны
    End;
End;

End.
